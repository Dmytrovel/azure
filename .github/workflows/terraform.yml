name: Terraform Plan and Apply with Approval

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - dev
          - qa
      pipeline_action:
        description: 'Pipeline action (create or destroy)'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - destroy

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        env:
           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
           ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
           TF_WORKSPACE: ${{ inputs.environment }}
        run: terraform init -backend-config=azurerm.tfbackend -upgrade
        
      - name: Terraform workspace
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform workspace select ${{ inputs.environment }}

      - name: Terraform Plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform plan -out=tfplan -var-file="./env/${{ inputs.environment }}.tfvars"
          #

      - name: Upload Plan File
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
  
  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Await Approval
        uses: hmarr/auto-approve-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          message: 'Approve this step to apply the Terraform changes.'
          #

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: manual-approval
    steps:
      - name: Download Plan File
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        if: github.event.inputs.pipeline_action == 'create'
        run: terraform apply -auto-approve -var-file="./env/${{ inputs.environment }}.tfvars"

      - name: Terraform Destroy
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        if: github.event.inputs.pipeline_action == 'destroy'
        run: terraform destroy -auto-approve -var-file="./env/${{ inputs.environment }}.tfvars"
